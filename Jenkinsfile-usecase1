pipeline {
    agent any
    options {
        skipDefaultCheckout true
    }
    environment {
        ANSIBLE_BASE="./ansible"
        BASE_CONFIG="./base_config"
        CONFIG_FRAGMENT_TEMPLATE_REPO_DIR="${WORKSPACE}/${BASE_CONFIG}"
        CONFIG_FRAGMENT_TEMPLATE_BASE_DIR="${CONFIG_FRAGMENT_TEMPLATE_REPO_DIR}/templates"
        INVENTORY_FILE_PATH="${WORKSPACE}/${ANSIBLE_BASE}/ansible/inventory/ccc_inventory.py"
        ANSIBLE_HOST_KEY_CHECKING="False"
        JSNAPY_TESTFILE_DIR="${WORKSPACE}/jsnapy/testfiles"
    }
    stages {
        stage('Templates'){
            steps{
                echo 'Cloning Templates project...'
                dir ("${BASE_CONFIG}") {
                    checkout([$class: 'GitSCM', branches: [[name: '*/cos_branch']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab', url: 'git@git.dqecom.com:Base_Configurations/juniper-common-configuration.git']]])
                }
                sh label: 'TEMPLATES DIRECTORY: ', script: "ls -lart ./; cd ${BASE_CONFIG}; ls -lart"
            }
        }
        stage('Playbooks'){
            steps{
                echo 'Cloning Ansible Playbooks...'
                dir ("${ANSIBLE_BASE}") {
                    checkout([$class: 'GitSCM', branches: [[name: '*/recent_changes']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab', url: 'git@git.dqecom.com:automation/ansible.git']]])
                }
                sh "ls -lart ./; cd ${ANSIBLE_BASE}; ls -lart"
            }
        }
        stage('Config Generation'){
            steps{
                sh 'printenv | sort'
                sh "ls -lart ${CONFIG_FRAGMENT_TEMPLATE_BASE_DIR}; head ${INVENTORY_FILE_PATH}"
                sh "cd ${ANSIBLE_BASE}/ansible; ./run_netdev_junos_config_gen_deploy.sh ACX2200"
            }
        }
        stage('Diff Report'){
            steps{
                sh 'echo Generating diff report'
                sleep 1
                sh 'echo Diff report generated!'
            }
        }
        stage('Approval?'){
            steps{
                input message: 'Approve?', ok: 'Deploy'
            }
        }
        stage('Deploy'){
            steps{
                sh 'echo Deploying...'
                sleep 1
                sh 'echo Configuration deployed!'
            }
        }
    }
}
