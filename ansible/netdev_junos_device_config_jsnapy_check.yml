---
###################################################################################
#
# Copyright 2020 Juniper Networks, Inc. All rights reserved.
# Licensed under the Juniper Networks Script Software License (the "License").
# You may not use this script file except in compliance with the License, which is 
# located at http://www.juniper.net/support/legal/scriptlicense/
# Unless required by applicable law or otherwise agreed to in writing by the 
# parties, software distributed under the License is distri buted on an 
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express 
# or implied.
#
##################################################################################
#
# Author        : Subrata Mazumdar, Juniper Networks Professional Services
# Contact       : subratam@juniper.net
# Company       : Juniper Networks
#
#
# Description   : 
#
#

- name: Compare snapshots files between devices
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  roles:
  - Juniper.junos
  vars :
    # jsnapy_home_dir: "{{ playbook_dir }}/files/jsnapy" 
    jsnapy_config_file_dir_path: "{{ jsnapy_home_dir }}"
    jsnapy_test_file_dir_path: "{{ jsnapy_config_file_dir_path }}/testfiles"
    jsnapy_base_dir_path: "/var/tmp/jsnapy"
    jsnapy_snapshot_dir_path: "{{ jsnapy_base_dir_path }}/snapshots"
    jsnapy_snapcheck_dir_path: "{{ jsnapy_base_dir_path }}/snapchecks"
    jsnapy_log_dir_path: "{{ jsnapy_base_dir_path }}/logs"
    jsnapy_config_j2_file_path: jsnapy.cfg.j2
    device_ip_List: "{{ groups[device_group_name] |  map('extract', hostvars, ['ansible_host'])  | list }}"
    jsnapy_save_snap_check_result: true

  environment:
      JSNAPY_HOME: "{{ jsnapy_home_dir }}" 

  tasks:

  - name: dump vsrx_config_audit_results
    debug: 
      msg: "device_group_name: {{ device_group_name }} device_ip_List: {{ device_ip_List }}"

  - name: initialize JSNAPy check result directory - remove and create 
    file:
      path: "{{ jsnapy_snapcheck_dir_path }}"
      state: "{{ item }}"
      mode: 0755
    when: jsnapy_save_snap_check_result and (jsnapy_snapcheck_dir_path is defined) and (jsnapy_snapcheck_dir_path != "")
    with_items:
      - absent 
      - directory 

  - name: init var for junos config audit results and save output of snap-check in it 
    set_fact:
      junos_config_audit_results_flat: {}

  - name: Compute the diff between the hosts
    include_role :
      name : junos-config-audit
    vars:
      device_ip: "{{ item }}"
    with_items:  "{{ device_ip_List }}"

  - name: dump junos_config_audit_results
    debug: 
      var: junos_config_audit_results_flat
      # msg: " junos_config_audit_results_flat: {{ junos_config_audit_results_flat }}"
    tags:
      - debug

  - name : Forced Fail
    when: false
    fail:

