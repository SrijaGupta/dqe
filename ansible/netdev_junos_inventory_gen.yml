---
###################################################################################
#
# Copyright 2020 Juniper Networks, Inc. All rights reserved.
# Licensed under the Juniper Networks Script Software License (the "License").
# You may not use this script file except in compliance with the License, which is
# located at http://www.juniper.net/support/legal/scriptlicense/
# Unless required by applicable law or otherwise agreed to in writing by the
# parties, software distributed under the License is distri buted on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied.
#
##################################################################################
#
# Author        : Subrata Mazumdar, Juniper Networks Professional Services
# Contact       : subratam@juniper.net
# Company       : Juniper Networks
#
#
# Description   : Initizlzes the authrozied_keys in NS nodes and known_hosts in the localhost.
#                 Must be run before running any other playbook in order intizilaize the SSH keys in NS nodes.
#
#                 How to run this playbook:
#                   ansible-playbook -vvv netdev_junos_inventory_gen.yml
#
#

- name: Get facts about JUnos Devices
  hosts: cluster_fabric_devices
  gather_facts: false
  connection: local
  # serial: 1
  vars:
    cluster_device_commit_check: true
    cluster_device_commit: true
    fabric_name: "{{ lookup('env','NETDEV_FABRIC_NAME') | default('Fab1', true) }}"
    fabric_config_dir: "{{ lookup('env','NETDEV_FABRIC_CONFIG_DIR') | default(('/var/tmp/%s' | format(fabric_name)), true) }}"
    fabric_inventory_dir_path: "{{ lookup('env','NETDEV_FABRIC_INVENTORY_DIR') | default(('%s/inventory' | format(fabric_config_dir)), true) }}"
    # fabric_inventory_file_name: "{{ lookup('env','NETDEV_FABRIC_INVENTORY_FILE_NAME') | default(('%s/inventory' | format(fabric_config_dir)), true) }}"
    fabric_inventory_file_name: "{{ lookup('env','NETDEV_FABRIC_INVENTORY_FILE_NAME') | default('netdev_inventory.inv', true) }}"
    fabric_inventory_file_path: "{{ '%s/%s' | format(fabric_inventory_dir_path , fabric_inventory_file_name) }}"

  roles:
  - Juniper.junos

  tasks:

  - name: Print fabric_inventory_file_path
    debug:
      msg: "fabric_inventory_dir_path: {{ fabric_inventory_dir_path }} fabric_inventory_file_name: {{ fabric_inventory_file_name }}"
      # msg: "fabric_inventory_dir_path: {{ fabric_inventory_dir_path }}"
      # msg: "fabric_inventory_dir_path: {{ fabric_inventory_dir_path }} fabric_inventory_file_path: {{ fabric_inventory_file_path }}"

  - name: Forced Fail
    when: false
    fail:

  - name: Wait untill QFXs are reachable by SSH
    when: false
    wait_for:
      port: 22
      host: "{{ ansible_host }}"
      # host: "{{ inventory_hostname }}"
      delay: 1
      sleep: 30
      timeout: 60

  # - name: ping the hosts
  #   ping :

  - name: Wait untill QFXs are reachable by NETCONF
    when: false
    wait_for:
      port: 830
      # port: 22
      host: "{{ ansible_host }}"
      # host: "{{ inventory_hostname }}"
      delay: 1
      sleep: 30
      timeout: 60

  - name: Retrieve facts from device running Junos OS
    juniper_junos_facts:
      provider:
        host: "{{ ansible_host }}"
        username: "{{ fabric_dev_cli_username }}"
        password: "{{ fabric_dev_cli_password }}"
        # ssh_keyfile: "{{ fabric_dev_cli_user_privkey_file }}"
      # savedir: /var/tmp
    # when: false

  # - name: Print version
  #   debug:
  #     var: junos.version

  - name: Set device info fact
    set_fact:
      fabric_device_info: {
          "model" : "{{ junos.model }}",
          "version" : "{{ junos.version }}",
          "serial_number" : "{{ junos.serialnumber }}",
          "ssh_private_key_file" : "{{ fabric_dev_cli_user_privkey_file | default('~/.ssh/id_rsa', true)  }}",
          "ssh_user_password" : "{{ fabric_dev_cli_password }}",
          "ssh_user_name" : "{{ fabric_dev_cli_username }}",
          "ip" : "{{ ansible_host }}",
          "fqdn" : "{{ junos.fqdn }}",
          "hostname" : "{{ junos.hostname }}"
      }
    # when: false


  # - name: Forced Fail
  #   fail:

# end-name

- name: Generate Inventory file for selected network  devices 
  hosts: localhost
  gather_facts: false
  vars:
    fabric_name: "{{ lookup('env','NETDEV_FABRIC_NAME') | default('Fab1', true) }}"
    fabric_config_dir: "{{ lookup('env','NETDEV_FABRIC_CONFIG_DIR') | default(('/var/tmp/%s' | format(fabric_name)), true) }}"
    fabric_inventory_dir_path: "{{ lookup('env','NETDEV_FABRIC_INVENTORY_DIR') | default(('%s/inventory' | format(fabric_config_dir)), true) }}"
    fabric_inventory_file_name: "{{ lookup('env','NETDEV_FABRIC_INVENTORY_FILE_NAME') | default('netdev_inventory.inv', true) }}"
    fabric_inventory_file_path: "{{ '%s/%s' | format(fabric_inventory_dir_path , fabric_inventory_file_name) }}"

  tasks:

  - name: Print fabric_inventory_file_path
    debug:
      msg: "fabric_inventory_dir_path: {{ fabric_inventory_dir_path }} fabric_inventory_file_path: {{ fabric_inventory_file_path }}"
      # msg: "fabric_inventory_dir_path: {{ fabric_inventory_dir_path }} fabric_inventory_file_name: {{ fabric_inventory_file_name }}"
      # msg: "fabric_inventory_dir_path: {{ fabric_inventory_dir_path }}"

  - name: Forced Fail
    when: false
    fail:

  - name: create directories fabric inventory file
    file:
      # path: "{{ fabric_config_dir }}/{{ item }}"
      path: "{{ fabric_inventory_dir_path }}"
      state: directory
      mode: 0755
    with_items:
      - "{{ fabric_config_dir }}"
      - "{{ fabric_inventory_dir_path }}"

  # Aggregate all the device fact into one list 
  - name: Build params for junos  device info 
    set_fact :
      fab_device_info_list : "{{ (fab_device_info_list | default([], true)) + [ fab_device_info ] }}"
    vars:
      dev_hostname: "{{ item }}"
      fab_device_info: "{{ hostvars[dev_hostname]['fabric_device_info'] }}"
    with_items: "{{  groups['cluster_fabric_devices'] }}"

  - name: Generate inventory file for Fabric devices
    template:
      src: "{{ fabric_inventory_template_file_path }}"
      dest : "{{ fabric_inventory_file_path }}"
    vars:
      fab_devices: "{{ fab_device_info_list }}"

  - name: Print fabric_inventory_file_path
    debug:
      msg: "fabric_inventory_file_path: {{ fabric_inventory_file_path }}"

  # - name: Forced Fail
  #   fail:

# end-name

