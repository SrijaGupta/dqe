---
###################################################################################
#
# Copyright 2020 Juniper Networks, Inc. All rights reserved.
# Licensed under the Juniper Networks Script Software License (the "License").
# You may not use this script file except in compliance with the License, which is 
# located at http://www.juniper.net/support/legal/scriptlicense/
# Unless required by applicable law or otherwise agreed to in writing by the 
# parties, software distributed under the License is distri buted on an 
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express 
# or implied.
#
##################################################################################
#
# Author        : Subrata Mazumdar, Juniper Networks Professional Services
# Contact       : subratam@juniper.net
# Company       : Juniper Networks
#
#
# Description   : Run this plabook to backup the Contrail-nodes based on the hostname(ip-address)
#
#                 How to run this playbook:
#                   ansible-playbook -vvv cfm_install_ha_play.yml
#
#



- name: Launch CFM GUI for Contrail Cluster with auto-login
  hosts: localhost
  gather_facts: false
  vars:
    # gui_type_id : cfm_gui_url_list
    # dqnet_server_gui_url_list: "{{ command_host_vars['config_data'][gui_type_id] }}"
    # cluster_instance_vm_mgmt_ip_list: "{{ command_host_vars['config_data']['cluster_instance_vm_mgmt_ip_list'] }}"

  tasks:

  - name: Dump updated cluster toplogy data
    debug:
      msg: "dqnet_server_gui_url_list: {{ dqnet_server_gui_url_list }}"
     
  # - name: Forced Fail
  #   fail:

  - name: open CFM GUI URL in chrome browser
    gui_autologin_chrome:
      cfm_server_url_list: "{{ dqnet_server_gui_url_list | join(',')  }}"
      cfm_username: "{{ dqnet_server_api_username | default('root', true)  }}"
      cfm_password: "{{ dqnet_server_api_password | default('abcd1234', true) }}"
      # cfm_version: "{{ lookup('env','CFM_VERSION') | default('3.2.1')  }}"
    # async: 0
    # poll: 0
    environment:
      - PATH : "{{ '%s:%s' | format(lookup('env', 'PATH'), lookup('env', 'CHROMIUM_DRIVER_PATH') ) }}"
      # - PATH : "{{ '%s:%s' | format(lookup('env', 'PATH'), lookup('env', 'CHROMIUM_DRIVER_PATH') ) }}"
    ignore_errors: true


  # - name: open CFM GUI URL in chrome browser
  #   cfm_gui_autologin_chrome:
  #     cluster_server_ip: "{{ item }}"
  #     cfm_username: "{{ cfm_api_username | default(cfm_gui_username)  }}"
  #     cfm_password: "{{ cfm_api_password | default(cfm_gui_password) }}"
  #     cfm_version: "{{ lookup('env','CFM_VERSION') | default('3.2.1')  }}"
  #   with_items: "{{ cfm_target_node_list }}"
  #   async: 0
  #   poll: 0
  #   when: false
  #   environment:
  #     - PATH : "{{ '%s:%s' | format(lookup('env', 'PATH'), lookup('env', 'CHROMIUM_DRIVER_PATH') ) }}"
  #     # - PATH : "{{ '%s:%s' | format(lookup('env', 'PATH'), lookup('env', 'CHROMIUM_DRIVER_PATH') ) }}"

  # - name: open CFM GUI URL in chrome browser
  #   shell:
  #     cmd: "open -n -a '/Applications/Google\ Chrome.app'  --args --profile-directory=NorthStar  https://{{ item }}:8443/"
  #   with_items: "{{ cfm_target_node_list }}"
  #   when: false and cfm_gui_open_in_browser 

  # - name: open CFM GUI URL in chrome browser
  #   shell:
  #     cmd: "open -n -a '/Applications/Google\ Chrome.app'  --args --profile-directory=NorthStar  https://{{ cfm_mgmt_vip }}:8443/"
  #   when: false and cfm_gui_open_in_browser and ( ((cfm_target_node_list | length) >= 3) or (cfm_inventory_type == 'cluster')) 
  #   # delegate_to: localhost


  # - name: Forced Fail
  #   fail:


# end-name

