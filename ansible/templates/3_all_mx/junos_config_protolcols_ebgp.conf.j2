{#
###################################################################################
#
# Copyright 2020 Juniper Networks, Inc. All rights reserved.
# Licensed under the Juniper Networks Script Software License (the "License").
# You may not use this script file except in compliance with the License, which is 
# located at http://www.juniper.net/support/legal/scriptlicense/
# Unless required by applicable law or otherwise agreed to in writing by the 
# parties, software distributed under the License is distri buted on an 
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express 
# or implied.
#
##################################################################################
#
# Author        : Subrata Mazumdar, Juniper Networks Professional Services
# Contact       : subratam@juniper.net
# Company       : Juniper Networks
#
#
# Description   : 
#                 
##################################################################################
#}


{#                                                                                          #}
{#                                                                                          #}
{% if not(fabric_device_params is defined)                                                  %}
{%   set fabric_device_params = {}                                                          %}
{% endif                                                                                    %}
{% set interfaces      = fabric_device_params.interfaces | default([], true)                %}
{% set inet_interfaces = fabric_device_params.inet_interfaces | default([], true)           %}
{% set peers           = fabric_device_params.peers | default([], true)                     %}
{% set router_id       = fabric_device_params.router_id | default('2.2.2.1', true)          %}
{% set overlay_asn     = fabric_device_params.overlay_asn | default(64512, true)            %}
{% set local_as        = fabric_device_params.local_as | default(64601, true)               %}
{% set local_address   = fabric_device_params.local_address | default('2.2.2.1', true)      %}
{% set vlan_id         = fabric_device_params.default_vlan_id | default(1, true)            %}
{% set device_type     = fabric_device_params.device_type | default('qfx', true)            %}
{#                                                                                          #}
{#                                                                                          #}

interfaces {
{% for interface in interfaces                                                              %}
    {{ interface.name }} {
        description "{{ interface.description }}";
{%      if ('vlan_id' in interface)                                                         %}
        unit 0 {
            family ethernet-switching {
                vlan {
                    members {{ interface.vlan_id }};
                }
            }
        }
{%      endif                                                                               %}
    }
{% endfor                                                                                   %}
{% for interface in inet_interfaces                %}
    {{ interface.name }} {
        description "{{ interface.description }}";
        unit 0 {
            family inet {
                address {{ interface.ip }};
            }
        }
    }
{% endfor                                                                                   %}

{# 
################################################
    em0 {
        unit 0 {
            family inet {
                dhcp;
            }
        }
    }
    em1 {
        unit 0 {
            family inet {
                address 169.254.0.2/24;
            }
        }
    }
################################################
#}

}

routing-options {
{#
################################################
    router-id {{ router_id }};
################################################
#}
    autonomous-system {{ overlay_asn }};
}
protocols {
    bgp {
        group CLOS {
            type external;
            family inet {
                unicast;
            }
            export export-bgp;
            local-as {{ local_as }};
{% for peer in peers                               %}
            neighbor {{ peer.neighbor }} {
                peer-as {{ peer.peer_as }};
            }
{% endfor                                          %}
        }
    }
    lldp {
        interface all;
    }
    lldp-med {
        interface all;
    }
}
policy-options {
    policy-statement export-bgp {
        term 1 {
            from {
                protocol [ direct local ];
                interface [ lo0.0 irb.0 ];
            }
            then accept;
        }                               
        term 2 {
            from protocol bgp;
            then accept;
        }
        term 3 {
            then reject;
        }
    }
}


